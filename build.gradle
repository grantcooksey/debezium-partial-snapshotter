plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = "com.github.grantcooksey"
archivesBaseName = "debezium-partial-snapshotter"
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    jcenter()
}

def prodDebeziumVersion = '1.3.0.Beta2'
def devDebeziumVersion = '1.3.0-SNAPSHOT'
def debeziumVersion
if (project.findProperty('env') == 'dev') {
    debeziumVersion = devDebeziumVersion
} else {
    debeziumVersion = prodDebeziumVersion
}

// Dependent on what version of Kafka that debezium uses. See debezium/pom.xml
def slf4jVersion = '1.7.28'
def kafkaVersion = '2.4.0'

dependencies {
    compileOnly group: 'org.slf4j', name:'slf4j-api', version: slf4jVersion
    compileOnly group: 'org.apache.kafka', name: 'kafka_2.12', version: kafkaVersion
    compileOnly group: 'io.debezium', name: 'debezium-connector-postgres', version: debeziumVersion

    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'io.debezium', name: 'debezium-api', version: debeziumVersion
    testImplementation group: 'io.debezium', name: 'debezium-connector-postgres', version: debeziumVersion
    testImplementation group: 'io.debezium', name: 'debezium-embedded', version: debeziumVersion
    testImplementation group: 'org.slf4j', name:'slf4j-api', version: slf4jVersion
    testImplementation group: 'org.apache.kafka', name: 'connect-api', version: kafkaVersion
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.5.11'
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.14.1'
}

test {
    testLogging.showStandardStreams = false
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'debezium-partial-snapshotter'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'debezium-partial-snapshotter'
                description = 'Custom snapshotter to get fine grain control over db snapshots with Debezium.'
                url = 'https://github.com/grantcooksey/debezium-partial-snapshotter'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/grantcooksey/debezium-partial-snapshotter/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        name = 'Grant Cooksey'
                        email = 'suitcase24@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/grantcooksey/debezium-partial-snapshotter.git'
                    developerConnection = 'scm:git:ssh://github.com:grantcooksey/debezium-partial-snapshotter.git'
                    url = 'https://github.com/grantcooksey/debezium-partial-snapshotter/tree/master'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            if (project.hasProperty('ossrhUsername')) {
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}
