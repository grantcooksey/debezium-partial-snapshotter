plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

apply plugin: 'maven'
apply plugin: 'signing'

group = "com.github.grantcooksey"
archivesBaseName = "debezium-partial-snapshotter"
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '1.8'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
    mavenLocal()
    jcenter()
}

def prodDebeziumVersion = '1.3.0.Beta2'
def devDebeziumVersion = '1.3.0-SNAPSHOT'
def debeziumVersion
if (project.findProperty('env') == 'dev') {
    debeziumVersion = devDebeziumVersion
} else {
    debeziumVersion = prodDebeziumVersion
}

dependencies {
    // Dependent on what version of Kafka tha debezium uses. See debezium/pom.xml
    compileOnly group: 'org.slf4j', name:'slf4j-api', version:'1.7.28'
    compileOnly group: 'org.apache.kafka', name: 'kafka_2.12', version: '2.4.0'
    compileOnly group: 'io.debezium', name: 'debezium-connector-postgres', version: debeziumVersion

    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'io.debezium', name: 'debezium-api', version: debeziumVersion
    testImplementation group: 'io.debezium', name: 'debezium-connector-postgres', version: debeziumVersion
    testImplementation group: 'io.debezium', name: 'debezium-embedded', version: debeziumVersion
    testImplementation group: 'org.slf4j', name:'slf4j-api', version:'1.7.28'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.14.1'
    testImplementation group: 'org.apache.kafka', name: 'connect-api', version: '2.4.0'
}

test {
    testLogging.showStandardStreams = false
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'debezium-partial-snapshotter'
                packaging 'jar'
                description 'Custom snapshotter to get fine grain control over db snapshots with Debezium.'
                url 'https://github.com/grantcooksey/debezium-partial-snapshotter'

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://github.com/grantcooksey/debezium-partial-snapshotter/master/LICENSE'
                    }
                }

                scm {
                    connection 'scm:git:git://github.com/grantcooksey/debezium-partial-snapshotter.git'
                    developerConnection 'scm:git:ssh://github.com:grantcooksey/debezium-partial-snapshotter.git'
                    url 'https://github.com/grantcooksey/debezium-partial-snapshotter/tree/master'
                }

                developers {
                    developer {
                        name 'Grant Cooksey'
                        email 'suitcase24@gmail.com'
                    }
                }
            }
        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
